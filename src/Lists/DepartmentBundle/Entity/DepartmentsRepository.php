<?php

namespace Lists\DepartmentBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;
use Lists\DogovorBundle\Entity\Dogovor;

/**
 * DepartmentsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DepartmentsRepository extends EntityRepository
{
    /**
     * Returns all departments for current dogovor
     *
     * @param int $dogovorId
     *
     * @return Query
     */
    public function getDepartmentsForDogovor($dogovorId)
    {
        /** @var Dogovor $dogovor */
        $dogovor = $this->getEntityManager()
            ->getRepository('ListsDogovorBundle:Dogovor')
            ->find($dogovorId);

        $organizationIds = array(
            $dogovor->getOrganizationId(),
            $dogovor->getCustomerId(),
            $dogovor->getPerformerId()
        );

        $query = $this->createQueryBuilder('d')
            ->where('d.organizationId in (:organiationIds)')
            ->leftJoin('d.city', 'city')
            ->orderBy('city.name', 'ASC')
            ->setParameter(':organiationIds', $organizationIds);

        return $query;
    }
    /**
     * Searches mpk by $q
     *
     * @param string $q
     *
     * @return mixed[]
     */
    public function getSearchQueryMpk($q) {
        $sql = $this->createQueryBuilder('c')
            ->where('lower(c.mpk) LIKE :q')
            ->setParameter(':q', mb_strtolower($q, 'UTF-8') . '%')
            ->getQuery();

        return $sql->getResult();
    }

    /**
     * Searches departments through filters
     *
     * @param array $filters
     *
     * @return mixed[]
     */
    public function getFilteredDepartments($filters) {

    }
}
