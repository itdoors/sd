<?php

namespace Lists\DepartmentBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * DepartmentPeopleMonthInfoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DepartmentPeopleMonthInfoRepository extends EntityRepository
{
    const REPLACEMENT_TYPE_REPLACEMENT = 'r';
    const REPLACEMENT_TYPE_SUBSTITUTION = 's';

    /**
     * @param integer|array $idDepartment
     * @param integer       $month
     * @param integer       $year
     * @param array         $filters
     * @param array         $orders
     *
     * @return \Doctrine\ORM\Query
     */
    public function getFilteredCoworkers($idDepartment, $month, $year, $filters = array(), $orders = array())
    {
        $sql = $this->createQueryBuilder('dpmi')
            ->select('dpmi.departmentPeopleId as id')
            ->addSelect('dpmi.id as idMonthInfo')
            ->addSelect('dpmi.realSalary')
            ->addSelect('dpmi.salaryNotOfficially')
            ->addSelect('dpmi.salaryOfficially')
            ->addSelect('dpr.id as replacementId')
            ->addSelect('i.firstName')
            ->addSelect('i.lastName')
            ->addSelect('i.middleName')
            ->addSelect('dp.admissionDate')
            ->addSelect('dp.id as idCoworker')
            ->addSelect('d.id as idDepartment')
            ->addSelect('dp.dismissalDate')
            ->addSelect('dp.admissionDateNotOfficially')
            ->addSelect('dp.dismissalDateNotOfficially')
            ->addSelect('dp.drfo')
            ->addSelect('i.address')
            ->addSelect('i.phone')
            ->addSelect('i.birthday')
            ->addSelect('i.passport')
            ->addSelect('m.name as mpkName')
            ->leftJoin('dpmi.departmentPeopleReplacement', 'dpr')
            ->leftJoin('dpmi.departmentPeople', 'dp')
            ->leftJoin('dp.department', 'd')
            ->leftJoin('dp.individual', 'i')
            ->leftJoin('dp.mpks', 'm');
            if (is_array($idDepartment)) {
                if (count($idDepartment)) {
                    $sql = $sql->where('d.id IN (:idDepartment)')
                        ->setParameter(':idDepartment', $idDepartment);
                } else {
                    $sql = $sql->where('1 = 2');
                }
            } else {
                $sql = $sql->where('d.id = :idDepartment')
                    ->setParameter(':idDepartment', $idDepartment);
            }
            $sql = $sql->andWhere('dpmi.year = :year')
            ->setParameter(':year', $year)
            ->andWhere('dpmi.month = :month')
            ->setParameter(':month', $month);
            //->groupBy('g.departmentPeopleId')


        if (sizeof($filters)) {

            foreach ($filters as $key => $value) {
                if (!$value) {
                    continue;
                }
                switch ($key) {
                    case 'mpk':
                        if (isset($value[0]) && !$value[0]) {
                            break;
                        }
                        $sql->andWhere('m.id in (:idsMpk)');
                        $sql->setParameter(':idsMpk', explode(',', $value));
                        break;
                    case 'coworker':
                        if (isset($value[0]) && !$value[0]) {
                            break;
                        }
                        $sql->andWhere('i.id  in (:idsUser)');
                        $sql->setParameter(':idsUser', explode(',', $value));
                        break;
                }
            }
        }

        if (sizeof($orders)) {

            foreach ($orders as $key => $value) {
                if (!$value) {
                    continue;
                }
                switch ($key) {
                    case 'mpk':
                        if (isset($value[0]) && !$value[0]) {
                            break;
                        }
                        $sql->orderBy('m.name', $value);
                        break;
                    case 'lastName':
                        if (isset($value[0]) && !$value[0]) {
                            break;
                        }
                        $sql->addOrderBy('i.lastName', $value);
                        break;
                }
            }
        }

        //$sql->orderBy('i.lastName', "ASC");
        //$sql = $sql->setMaxResults(70);
        $query = $sql->getQuery();

        return $query;

    }
}
