<?php

namespace Lists\DepartmentBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * DepartmentPeopleMonthInfoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DepartmentPeopleMonthInfoRepository extends EntityRepository
{

    /**
     * @param integer $idDepartment
     * @param integer $month
     * @param integer $year
     * @param array   $filters
     *
     * @return \Doctrine\ORM\Query
     */
    public function getFilteredCoworkers($idDepartment, $month, $year, $filters = array())
    {
        $sql = $this->createQueryBuilder('dpmi')
            ->select('dpmi.departmentPeopleId as id')
            ->addSelect('i.firstName')
            ->addSelect('i.lastName')
            ->addSelect('i.middleName')
            ->addSelect('dp.admissionDate')
            ->addSelect('dp.dismissalDate')
            ->addSelect('dp.admissionDateNotOfficially')
            ->addSelect('dp.dismissalDateNotOfficially')
            ->addSelect('dp.drfo')
            ->addSelect('i.address')
            ->addSelect('i.phone')
            ->addSelect('i.birthday')
            ->addSelect('i.passport')
            ->addSelect('m.name as mpkName')
            ->leftJoin('dpmi.departmentPeople', 'dp')
            ->leftJoin('dp.department', 'd')
            ->leftJoin('dp.individual', 'i')
            ->leftJoin('dp.mpks', 'm')
            ->where('d.id = :idDepartment')
            ->setParameter(':idDepartment', $idDepartment)
            ->andWhere('dpmi.year = :year')
            ->setParameter(':year', $year)
            ->andWhere('dpmi.month = :month')
            ->setParameter(':month', $month);
            //->groupBy('g.departmentPeopleId')


            if (sizeof($filters)) {

                foreach ($filters as $key => $value) {
                    if (!$value) {
                        continue;
                    }
                    switch ($key) {
                        case 'mpk':
                            if (isset($value[0]) && !$value[0]) {
                                break;
                            }
                            $sql->andWhere('m.id in (:idsMpk)');
                            $sql->setParameter(':idsMpk', explode(',', $value));
                            break;
                        case 'coworker':
                            if (isset($value[0]) && !$value[0]) {
                                break;
                            }
                            $sql->andWhere('i.id  in (:idsUser)');
                            $sql->setParameter(':idsUser', explode(',', $value));
                            break;
                    }
                }
            }

        $query = $sql->getQuery();
        return $query;

    }
}
