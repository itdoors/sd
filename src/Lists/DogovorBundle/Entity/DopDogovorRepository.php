<?php

namespace Lists\DogovorBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;

/**
 * DopDogovorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DopDogovorRepository extends EntityRepository
{
    /**
     * Return all dop dogovor depending on dogovor id
     *
     * @param int $dogovorId
     * @param int $id
     *
     * @return Query
     */
    public function getAllByDogovorIdQuery($dogovorId, $id = null)
    {
        $query = $this->createQueryBuilder('dd')
            ->select('dd.id as id')
            ->addSelect('dd.number as number')
            ->addSelect('dd.subject as subject')
            ->addSelect('dd.dogovorId as dogovorId')
            ->addSelect('dd.dopDogovorType as dopDogovorType')
            ->addSelect('dd.startdatetime as startdatetime')
            ->addSelect('dd.activedatetime as activedatetime')
            ->addSelect('dd.isActive as dopDogovorIsActive')
            ->addSelect('dd.filepath as filepath')
            ->addSelect('dd.total as total')
            ->addSelect("CONCAT(CONCAT(creator.lastName, ' '), creator.firstName) as creatorFullName")
            ->addSelect("CONCAT(CONCAT(saller.lastName, ' '), saller.firstName) as sallerFullName")
            ->addSelect('(
                SELECT
                    COUNT(ddd.id) as countId
                FROM
                    ListsDogovorBundle:DogovorDepartment ddd
                WHERE
                    ddd.dopDogovorId = dd.id
                ) as departmentCount')
            ->leftJoin('dd.user', 'creator')
            ->leftJoin('dd.saller', 'saller');

        if ($dogovorId)
        {
            $query
                ->where('dd.dogovorId = :dogovorId')
                ->setParameter(':dogovorId', $dogovorId);
        }

        if ($id)
        {
            $query
                ->andWhere('dd.id = :id')
                ->setParameter(':id', $id);
        }

        return $query->getQuery();
    }

    /**
     * Returns Query for form select depending on dogovorId
     *
     * @param int $dogovorId
     *
     * @return Query $query
     */
    public function getDopDogovorQueryByDogovorId($dogovorId)
    {
        return  $this->createQueryBuilder('dd')
            ->where('dd.dogovorId = :dogovorId')
            ->setParameter(':dogovorId', $dogovorId);

    }
}
