{% trans_default_domain 'ListsCoachBundle' %}
    <link rel="stylesheet" type="text/css" href="{{ asset('metronic/assets/global/plugins/jstree/dist/themes/default/style.min.css')}}" />
    <script type="text/javascript" src="{{ asset('metronic/assets/global/plugins/datatables/media/js/jquery.dataTables.min.js')}}"></script>
    <script type="text/javascript" src="{{ asset('metronic/assets/global/plugins/datatables/plugins/bootstrap/dataTables.bootstrap.js')}}"></script>
    <script>
        var actionTopics;
        jQuery(document).ready(function() {
        	TableEditable.init();
        });
         
        var TableEditable = function () {
        
            var handleTable = function () {
        
                function restoreRow(oTable, nRow) {
                    var aData = oTable.fnGetData(nRow);
                    var jqTds = $('>td', nRow);
        
                    for (var i = 0, iLen = jqTds.length; i < iLen; i++) {
                        oTable.fnUpdate(aData[i], nRow, i, false);
                    }
        
                    oTable.fnDraw();
                }
        
                function editRow(oTable, nRow) {
                    var aData = oTable.fnGetData(nRow);
                    var jqTds = $('>td', nRow);
                    jqTds[0].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[0] + '">';
                    jqTds[1].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[1] + '">';
                    jqTds[2].innerHTML = '<a class="edit" href="">{% trans %}Save{% endtrans %}</a>';
                    jqTds[3].innerHTML = '<a class="cancel" href="">{% trans %}Cancel{% endtrans %}</a>';
                }
        
                function saveRow(oTable, nRow) {
                    var jqInputs = $('input', nRow);
                    oTable.fnUpdate(jqInputs[0].value, nRow, 0, false);
                    oTable.fnUpdate(jqInputs[1].value, nRow, 1, false);
                    oTable.fnUpdate('<a class="edit" href="">{% trans %}Edit{% endtrans %}</a>', nRow, 2, false);
                    oTable.fnUpdate('<a class="delete" href="">{% trans %}Delete{% endtrans %}</a>', nRow, 3, false);
                    oTable.fnDraw();
                }
        
                function cancelEditRow(oTable, nRow) {
                    var jqInputs = $('input', nRow);
                    oTable.fnUpdate(jqInputs[0].value, nRow, 0, false);
                    oTable.fnUpdate(jqInputs[1].value, nRow, 1, false);
                    oTable.fnUpdate('<a class="edit" href="">{% trans %}Edit{% endtrans %}</a>', nRow, 2, false);
                    oTable.fnDraw();
                }
        
                var table = $('#sample_editable_1');
        
                var oTable = table.dataTable({
                    "bPaginate": false,
                    "bFilter": false,
                    "bInfo": false
                });
        
                var tableWrapper = $("#sample_editable_1_wrapper");
        
                tableWrapper.find(".dataTables_length select").select2({
                    showSearchInput: false //hide search box with special css class
                }); // initialize select2 dropdown
        
                var nEditing = null;
                var nNew = false;
        
                $('#sample_editable_1_new').click(function (e) {
                    e.preventDefault();
        
                    if (nNew && nEditing) {
                        if (confirm("Previose row not saved. Do you want to save it ?")) {
                            saveRow(oTable, nEditing); // save
                            $(nEditing).find("td:first").html("Untitled");
                            nEditing = null;
                            nNew = false;
        
                        } else {
                            oTable.fnDeleteRow(nEditing); // cancel
                            nEditing = null;
                            nNew = false;
                            
                            return;
                        }
                    }
        
                    var aiNew = oTable.fnAddData(['', '', '', '', '', '']);
                    var nRow = oTable.fnGetNodes(aiNew[0]);
                    editRow(oTable, nRow);
                    nEditing = nRow;
                    nNew = true;
                });
        
                table.on('click', '.delete', function (e) {
                    e.preventDefault();
        
                    if (confirm("Are you sure to delete this row ?") == false) {
                        return;
                    }
        
                    var nRow = $(this).parents('tr')[0];
                    oTable.fnDeleteRow(nRow);
                    alert("Deleted! Do not forget to do some ajax to sync with backend :)");
                });
        
                table.on('click', '.cancel', function (e) {
                    e.preventDefault();
                    if (nNew) {
                        oTable.fnDeleteRow(nEditing);
                        nEditing = null;
                        nNew = false;
                    } else {
                        restoreRow(oTable, nEditing);
                        nEditing = null;
                    }
                });
        
                table.on('click', '.edit', function (e) {
                    e.preventDefault();
        
                    /* Get the row as a parent of the link that was clicked on */
                    var nRow = $(this).parents('tr')[0];
        
                    if (nEditing !== null && nEditing != nRow) {
                        /* Currently editing - but not this row - restore the old before continuing to edit mode */
                        restoreRow(oTable, nEditing);
                        editRow(oTable, nRow);
                        nEditing = nRow;
                    } else if (nEditing == nRow && this.innerHTML == "Save") {
                        /* Editing this row and want to save it */
                        saveRow(oTable, nEditing);
                        nEditing = null;
                        alert("Updated! Do not forget to do some ajax to sync with backend :)");
                    } else {
                        /* No edit in progress - let's start one */
                        editRow(oTable, nRow);
                        nEditing = nRow;
                    }
                });
            }
        
            return {
        
                //main function to initiate the module
                init: function () {
                    handleTable();
                }
        
            };
        
        }();
    </script>
    
    <div class="portlet box blue">
		<div class="portlet-title">
			<div class="caption">
				<i class="fa fa-edit"></i>{% trans %}Action topic{% endtrans %}
			</div>
			<div class="tools">
				<a href="javascript:;" class="collapse" data-original-title="" title="">
				</a>
			</div>
		</div>
		<div class="portlet-body">
			<div class="table-toolbar">
				<div class="row">
					<div class="col-md-6">
						<div class="btn-group">
							<button id="sample_editable_1_new" class="btn green">
							{% trans %}Add{% endtrans %} <i class="fa fa-plus"></i>
							</button>
						</div>
					</div>
				</div>
			</div>
			<div id="sample_editable_1_wrapper" class="dataTables_wrapper no-footer">
                <table  class="table table-striped table-hover table-bordered dataTable no-footer" id="sample_editable_1">
                    <thead>
                        <tr>
                            <th width="10%" role="columnheader" rowspan="1" colspan="1">{% trans %}ID{% endtrans %}</th>
                            <th width="60%" role="columnheader" rowspan="1" colspan="1">{% trans %}Action topic{% endtrans %}</th>
                            <th width="15%" role="columnheader" rowspan="1" colspan="1">{% trans %}Edit{% endtrans %}</th>
                            <th width="15%" role="columnheader" rowspan="1" colspan="1">{% trans %}Delete{% endtrans %}</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for topic in tabData.actionTopics %}
                        <tr>
                            <td>{{topic.id}}</td>
                            <td>{{topic.title}}</td>
                            <td ><a class="edit" href="">{% trans %}Edit{% endtrans %}</a></td>
                            <td ><a class="delete" href="">{% trans %}Delete{% endtrans %}</a></td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
		   </div>
		</div>
	</div>
	<div class="portlet box blue">
		<div class="portlet-title">
			<div class="caption">
				<i class="fa fa-edit"></i>{% trans %}Action type{% endtrans %}
			</div>
			<div class="tools">
				<a href="javascript:;" class="collapse" data-original-title="" title="">
				</a>
			</div>
		</div>
		<div class="portlet-body">
			<div class="table-toolbar">
				<div class="row">
					<div class="col-md-6">
						<div class="btn-group">
							<button id="sample_editable_2_new" class="btn green">
							{% trans %}Add{% endtrans %} <i class="fa fa-plus"></i>
							</button>
						</div>
					</div>
				</div>
			</div>
			<div id="sample_editable_2_wrapper" class="dataTables_wrapper no-footer">
                <table  class="table table-striped table-hover table-bordered dataTable no-footer" id="sample_editable_2">
                    <thead>
                        <tr>
                            <th width="10%" role="columnheader" rowspan="1" colspan="1">{% trans %}ID{% endtrans %}</th>
                            <th width="60%" role="columnheader" rowspan="1" colspan="1">{% trans %}Action type{% endtrans %}</th>
                            <th width="15%" role="columnheader" rowspan="1" colspan="1">{% trans %}Edit{% endtrans %}</th>
                            <th width="15%" role="columnheader" rowspan="1" colspan="1">{% trans %}Delete{% endtrans %}</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for type in tabData.actionTypes %}
                        <tr>
                            <td>{{type.id}}</td>
                            <td>{{type.title}}</td>
                            <td ><a class="edit" href="">{% trans %}Edit{% endtrans %}</a></td>
                            <td ><a class="delete" href="">{% trans %}Delete{% endtrans %}</a></td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
		   </div>
		</div>
	</div>