{% trans_default_domain 'ListsCoachBundle' %}
    <script>
        var actionTopics;
        var TableEditable = function () {
        
            var handleTable = function () {
        
                function restoreRow(oTable, nRow) {
                    var aData = oTable.fnGetData(nRow);
                    var jqTds = $('>td', nRow);
        
                    for (var i = 0, iLen = jqTds.length; i < iLen; i++) {
                        oTable.fnUpdate(aData[i], nRow, i, false);
                    }
        
                    oTable.fnDraw();
                }
        
                function editRow(oTable, nRow) {
                    var aData = oTable.fnGetData(nRow);
                    var jqTds = $('>td', nRow);
                    jqTds[1].innerHTML = '<input type="text" class="form-control input-small" value="' + aData[1] + '">';
                    jqTds[2].innerHTML = '<a class="edit" href="javascript:;">{% trans %}Save{% endtrans %}</a>';
                    jqTds[3].innerHTML = '<a class="cancel" href="javascript:;">{% trans %}Cancel{% endtrans %}</a>';
                }
        
                function saveRow(oTable, nRow) {
                    var jqInputs = $('input', nRow);
                    oTable.fnUpdate(jqInputs[0].value, nRow, 1, false);
                    oTable.fnUpdate('<a class="edit" href="javascript:;">{% trans %}Edit{% endtrans %}</a>', nRow, 2, false);
                    oTable.fnUpdate('<a class="delete" href="javascript:;">{% trans %}Delete{% endtrans %}</a>', nRow, 3, false);
                    oTable.fnDraw();
                }
        
                function cancelEditRow(oTable, nRow) {
                    var jqInputs = $('input', nRow);
                    oTable.fnUpdate(jqInputs[0].value, nRow, 0, false);
                    oTable.fnUpdate(jqInputs[1].value, nRow, 1, false);
                    oTable.fnUpdate('<a class="edit" href="javascript:;">{% trans %}Edit{% endtrans %}</a>', nRow, 2, false);
                    oTable.fnDraw();
                }
        
                var table = $('#sample_editable_1');
                var table2 = $('#sample_editable_2');
        
                var oTable = table.dataTable({
                    "bPaginate": false,
                    "bFilter": false,
                    "bInfo": false
                });
                var oTable2 = table2.dataTable({
                    "bPaginate": false,
                    "bFilter": false,
                    "bInfo": false
                });
        
                var nEditing = null;
                var nEditing2 = null;
                var nNew = false;
                var nNew2 = false;
        
                $('#sample_editable_1_new').click(function (e) {
                    e.preventDefault();
        
                    if (nNew && nEditing) {
                        if (confirm("Previose row not saved. Do you want to save it ?")) {
                            saveRow(oTable, nEditing); // save
                            $(nEditing).find("td:first").html("Untitled");
                            nEditing = null;
                            nNew = false;
        
                        } else {
                            oTable.fnDeleteRow(nEditing); // cancel
                            nEditing = null;
                            nNew = false;
                            
                            return;
                        }
                    }
        
                    var aiNew = oTable.fnAddData(['','','','']);
                    var nRow = oTable.fnGetNodes(aiNew[0]);
                    editRow(oTable, nRow);
                    nEditing = nRow;
                    nNew = true;
                });
                $('#sample_editable_2_new').click(function (e) {
                    e.preventDefault();
        
                    if (nNew2 && nEditing2) {
                        if (confirm("Previose row not saved. Do you want to save it ?")) {
                            saveRow(oTable2, nEditing2); // save
                            $(nEditing2).find("td:first").html("Untitled");
                            nEditing2 = null;
                            nNew2 = false;
        
                        } else {
                            oTable2.fnDeleteRow(nEditing2); // cancel
                            nEditing2 = null;
                            nNew2 = false;
                            
                            return;
                        }
                    }
        
                    var aiNew = oTable2.fnAddData(['','','','']);
                    var nRow = oTable2.fnGetNodes(aiNew[0]);
                    editRow(oTable2, nRow);
                    nEditing2 = nRow;
                    nNew2 = true;
                });
        
                table.on('click', '.delete', function (e) {
                    e.preventDefault();
        
                    var nRow = $(this).parents('tr')[0];
                    var aData = oTable.fnGetData(nRow);
                    
                    $.ajax({
                        url: "{{ url('lists_coach_ajax_action_topic_delete') }}",
                        data: {
                            id: aData[0],
                            title: aData[1]
                        },
                        beforeSend: function () {
                        	SD.blockUI($('#sample_editable_1'));
                        },
                        success: function(response) {
                        	oTable.fnDeleteRow(nRow);
                        	SD.unblockUI($('#sample_editable_1'));
                        },
                        error: function(response) {
                        	SD.unblockUI($('#sample_editable_1'));
                        }
                    });
                });
                table2.on('click', '.delete', function (e) {
                    e.preventDefault();
        
                    var nRow = $(this).parents('tr')[0];
                    var aData = oTable2.fnGetData(nRow);
                    
                    $.ajax({
                        url: "{{ url('lists_coach_ajax_action_type_delete') }}",
                        data: {
                            id: aData[0],
                            title: aData[1]
                        },
                        beforeSend: function () {
                        	SD.blockUI($('#sample_editable_2'));
                        },
                        success: function(response) {
                        	oTable2.fnDeleteRow(nRow);
                        	SD.unblockUI($('#sample_editable_2'));
                        },
                        error: function(response) {
                        	SD.unblockUI($('#sample_editable_2'));
                        }
                    });
                });
        
                table.on('click', '.cancel', function (e) {
                    e.preventDefault();
                    if (nNew) {
                        oTable.fnDeleteRow(nEditing);
                        nEditing = null;
                        nNew = false;
                    } else {
                        restoreRow(oTable, nEditing);
                        nEditing = null;
                    }
                });
                table2.on('click', '.cancel', function (e) {
                    e.preventDefault();
                    if (nNew2) {
                        oTable2.fnDeleteRow(nEditing2);
                        nEditing2 = null;
                        nNew2 = false;
                    } else {
                        restoreRow(oTable2, nEditing2);
                        nEditing2 = null;
                    }
                });
        
                table.on('click', '.edit', function (e) {
                    e.preventDefault();
        
                    /* Get the row as a parent of the link that was clicked on */
                    var nRow = $(this).parents('tr')[0];
        
                    if (nEditing !== null && nEditing != nRow) {
                        /* Currently editing - but not this row - restore the old before continuing to edit mode */
                        restoreRow(oTable, nEditing);
                        editRow(oTable, nRow);
                        nEditing = nRow;
                    } else if (nEditing == nRow && this.innerHTML == "{% trans %}Save{% endtrans %}") {
                        /* Editing this row and want to save it */
                        saveRow(oTable, nEditing);
                        var aData = oTable.fnGetData(nRow);
                        $.ajax({
                            url: "{{ url('lists_coach_ajax_action_topic_edit') }}",
                            data: {
                                id: aData[0],
                                title: aData[1]
                            },
                            beforeSend: function () {
                            	SD.blockUI($('#sample_editable_1'));
                            },
                            success: function(topic) {
                            	$(nRow).find("td:first").html(topic.id);
                            	SD.unblockUI($('#sample_editable_1'));
                            }
                        });
                        nEditing = null;
                    } else {
                        /* No edit in progress - let's start one */
                        editRow(oTable, nRow);
                        nEditing = nRow;
                    }
                });
                table2.on('click', '.edit', function (e) {
                    e.preventDefault();
        
                    /* Get the row as a parent of the link that was clicked on */
                    var nRow = $(this).parents('tr')[0];
        
                    if (nEditing2 !== null && nEditing2 != nRow) {
                        /* Currently editing - but not this row - restore the old before continuing to edit mode */
                        restoreRow(oTable2, nEditing2);
                        editRow(oTable2, nRow);
                        nEditing2 = nRow;
                    } else if (nEditing2 == nRow && this.innerHTML == "{% trans %}Save{% endtrans %}") {
                        /* Editing this row and want to save it */
                        saveRow(oTable2, nEditing2);
                        var aData = oTable2.fnGetData(nRow);
                        $.ajax({
                            url: "{{ url('lists_coach_ajax_action_type_edit') }}",
                            data: {
                                id: aData[0],
                                title: aData[1]
                            },
                            beforeSend: function () {
                            	SD.blockUI($('#sample_editable_2'));
                            },
                            success: function(topic) {
                            	$(nRow).find("td:first").html(topic.id);
                            	SD.unblockUI($('#sample_editable_2'));
                            }
                        });
                        nEditing2 = null;
                    } else {
                        /* No edit in progress - let's start one */
                        editRow(oTable2, nRow);
                        nEditing2 = nRow;
                    }
                });
            }
        
            return {
        
                //main function to initiate the module
                init: function () {
                    handleTable();
                }
        
            };
        
        }();
        jQuery(document).ready(function() {
        	TableEditable.init();
        });
    </script>
    
    <div class="portlet box blue">
		<div class="portlet-title">
			<div class="caption">
				<i class="fa fa-edit"></i>{% trans %}Action type{% endtrans %}
			</div>
			<div class="tools">
				<a href="javascript:;" class="collapse" data-original-title="" title="">
				</a>
			</div>
		</div>
		<div class="portlet-body">
			<div class="table-toolbar">
				<div class="row">
					<div class="col-md-6">
						<div class="btn-group">
							<button id="sample_editable_2_new" class="btn green">
							{% trans %}Add{% endtrans %} <i class="fa fa-plus"></i>
							</button>
						</div>
					</div>
				</div>
			</div>
			<div id="sample_editable_2_wrapper" class="dataTables_wrapper no-footer">
                <table  class="table table-striped table-hover table-bordered dataTable no-footer" id="sample_editable_2">
                    <thead>
                        <tr>
                            <th width="10%" role="columnheader" rowspan="1" colspan="1">{% trans %}ID{% endtrans %}</th>
                            <th width="60%" role="columnheader" rowspan="1" colspan="1">{% trans %}Action type{% endtrans %}</th>
                            <th width="15%" role="columnheader" rowspan="1" colspan="1">{% trans %}Edit{% endtrans %}</th>
                            <th width="15%" role="columnheader" rowspan="1" colspan="1">{% trans %}Delete{% endtrans %}</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for type in tabData.actionTypes %}
                        <tr>
                            <td>{{type.id}}</td>
                            <td>{{type.title}}</td>
                            <td ><a class="edit" href="">{% trans %}Edit{% endtrans %}</a></td>
                            <td ><a class="delete" href="">{% trans %}Delete{% endtrans %}</a></td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
		   </div>
		</div>
	</div>
    <div class="portlet box blue">
		<div class="portlet-title">
			<div class="caption">
				<i class="fa fa-edit"></i>{% trans %}Action topic{% endtrans %}
			</div>
			<div class="tools">
				<a href="javascript:;" class="collapse" data-original-title="" title="">
				</a>
			</div>
		</div>
		<div class="portlet-body">
			<div class="table-toolbar">
				<div class="row">
					<div class="col-md-6">
						<div class="btn-group">
							<button id="sample_editable_1_new" class="btn green">
							{% trans %}Add{% endtrans %} <i class="fa fa-plus"></i>
							</button>
						</div>
					</div>
				</div>
			</div>
			<div id="sample_editable_1_wrapper" class="dataTables_wrapper no-footer">
                <table  class="table table-striped table-hover table-bordered dataTable no-footer" id="sample_editable_1">
                    <thead>
                        <tr>
                            <th width="10%" role="columnheader" rowspan="1" colspan="1">{% trans %}ID{% endtrans %}</th>
                            <th width="60%" role="columnheader" rowspan="1" colspan="1">{% trans %}Action topic{% endtrans %}</th>
                            <th width="15%" role="columnheader" rowspan="1" colspan="1">{% trans %}Edit{% endtrans %}</th>
                            <th width="15%" role="columnheader" rowspan="1" colspan="1">{% trans %}Delete{% endtrans %}</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for topic in tabData.actionTopics %}
                        <tr>
                            <td>{{topic.id}}</td>
                            <td>{{topic.title}}</td>
                            <td ><a class="edit" href="javascript:;">{% trans %}Edit{% endtrans %}</a></td>
                            <td ><a class="delete" href="javascript:;">{% trans %}Delete{% endtrans %}</a></td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
		   </div>
		</div>
	</div>