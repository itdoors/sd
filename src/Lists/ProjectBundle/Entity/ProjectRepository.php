<?php

namespace Lists\ProjectBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ProjectRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjectRepository extends EntityRepository
{
    /**
     * getListProjectSimple
     * 
     * @param User   $user
     *
     * @return Query
     */
    public function getListProjectForTender($user)
    {
        /** @var \Doctrine\ORM\QueryBuilder $sql */
        $sql = $this->createQueryBuilder('p');
        /** @var \Doctrine\ORM\QueryBuilder $sqlCount */
        $sqlCount = $this->createQueryBuilder('p');
        
        // select
        $sql->select('p');
        $sqlCount->select('COUNT(DISTINCT p.id)');
        
        //where
//        if ($status == 'active') {
//            $sql->where('p.isClosed = false or p.isClosed is null');
//            $sqlCount->where('p.isClosed = false or p.isClosed is null');
//        } elseif ($status == 'closed') {
//            $sql->where('p.isClosed = true');
//            $sqlCount->where('p.isClosed = true');
//        }
        if ($user) {
            $sql->leftJoin('p.managers', 'm')
                ->andWhere('m.user = :user')
                ->setParameter(':user', $user);
            $sqlCount->leftJoin('p.managers', 'm')
                ->andWhere('m.user = :user')
                ->setParameter(':user', $user);
        }
        $sql->andWhere('p INSTANCE OF :discr')
            ->setParameter(':discr', array(
                'project_simple',
                'project_commercial_tender',
                'project_electronic_trading'
            ));
        

        $query = $sql->getQuery();
        $count = $sqlCount->getQuery()->getSingleScalarResult();

        $query->setHint('knp_paginator.count', $count);

        return $query;
    }
}
