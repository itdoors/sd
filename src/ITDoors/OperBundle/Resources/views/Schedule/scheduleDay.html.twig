{% trans_default_domain 'ITDoorsOperBundle' %}

<script>
    $(document).ready(function(){


            $('.timepiker-cool').timepicker({
                autoclose: true,
                minuteStep: 5,
                showSeconds: false,
                showMeridian: false
            });
            $('#newFromTime').timepicker({
                autoclose: true,
                minuteStep: 5,
                showSeconds: false,
                showMeridian: false,
                defaultTime: '09:00'
            });
            $('#newToTime').timepicker({
                autoclose: true,
                minuteStep: 5,
                showSeconds: false,
                showMeridian: false,
                defaultTime: '18:00'
            });
            //$('.timepicker-cool12').timepicker();

        $('.editButton').die('click');
        $('.editButton').live('click', function(e){
            e.preventDefault();

            var parent = $(this).parent("td").parent("tr");
            var spanFrom = parent.find('.timeFrom');
            var spanTo = parent.find('.timeTo');
            var inputFrom = parent.find('.timeFromInput');
            var inputTo = parent.find('.timeToInput');
            var spinClass ="fa fa-spinner fa-spin";
            var editClass = "fa-edit";
            var checkClass = "fa-check-circle-o";
            var deleteButton = parent.find(".deleteButton");
            var cancelButton = parent.find(".cancelButton");
            var editButton = parent.find(".editButton");
            var spinner = parent.find(".spinner");
            var checkButton = parent.find(".checkButton");

            $(this).addClass('notDisplayed');
            checkButton.removeClass('notDisplayed');

            spanFrom.addClass('notDisplayed');
            spanTo.addClass('notDisplayed');
            inputFrom.removeClass('notDisplayed');
            inputTo.removeClass('notDisplayed');

            inputFrom.val(spanFrom.html()) ;
            inputTo.val(spanTo.html());
            deleteButton.addClass('notDisplayed');
            cancelButton.removeClass('notDisplayed');


        })

        $('.cancelButton').die('click');
        $('.cancelButton').live('click', function(e){
            e.preventDefault();

            var parent = $(this).parent("td").parent("tr");
            var spanFrom = parent.find('.timeFrom');
            var spanTo = parent.find('.timeTo');
            var inputFrom = parent.find('.timeFromInput');
            var inputTo = parent.find('.timeToInput');
            var spinClass ="fa fa-spinner fa-spin";
            var editClass = "fa-edit";
            var checkClass = "fa-check-circle-o";
            var deleteButton = parent.find(".deleteButton");
            var cancelButton = parent.find(".cancelButton");
            var editButton = parent.find(".editButton");
            var spinner = parent.find(".spinner");
            var checkButton = parent.find(".checkButton");

            $(this).addClass('notDisplayed');
            checkButton.addClass('notDisplayed');
            deleteButton.removeClass('notDisplayed');
            editButton.removeClass('notDisplayed');

            inputFrom.addClass('notDisplayed');
            inputTo.addClass('notDisplayed');
            spanFrom.removeClass('notDisplayed');
            spanTo.removeClass('notDisplayed');
        })

        $('.checkButton').die('click');
        $('.checkButton').live('click', function(e){
            e.preventDefault();

            var parent = $(this).parent("td").parent("tr");
            var spanFrom = parent.find('.timeFrom');
            var spanTo = parent.find('.timeTo');
            var inputFrom = parent.find('.timeFromInput');
            var inputTo = parent.find('.timeToInput');
            var spinClass ="fa fa-spinner fa-spin";
            var editClass = "fa-edit";
            var checkClass = "fa-check-circle-o";
            var deleteButton = parent.find(".deleteButton");
            var cancelButton = parent.find(".cancelButton");
            var editButton = parent.find(".editButton");
            var spinner = parent.find(".spinner");
            var checkButton = parent.find(".checkButton");

            $(this).addClass('notDisplayed');
            cancelButton.addClass('notDisplayed');
            spinner.removeClass('notDisplayed');

            spanFrom.text(inputFrom.val());
            spanTo.text(inputTo.val());

            spanFrom.removeClass('notDisplayed');
            spanTo.removeClass('notDisplayed');
            inputFrom.addClass('notDisplayed');
            inputTo.addClass('notDisplayed');


        })





        $('.deleteButton').die('click');
        $('.deleteButton').live('click', function(e){
            var parent = $(this).parent("td").parent("tr");
            var deleteButton = parent.find(".deleteButton");
            var cancelButton = parent.find(".cancelButton");
            var editButton = parent.find(".editButton");
            var spinner = parent.find(".spinner");
            var checkButton = parent.find(".checkButton");


            e.preventDefault();

            var message = '{% trans %}Do you confirm deleting{% endtrans %}?'
            if (confirm(message)) {
                var url = $(this).data('url');
                var idGrafikTime = $(this).data('id_grafik_time');

                var idCoworker = $('#addButton').data('id_coworker');
                var idDepartment = $('#addButton').data('id_department');
                var date = $('#addButton').data('date');
                var sendData = {
                    'idCoworker': idCoworker,
                    'idDepartment': idDepartment,
                    'date': date,
                    'idGrafikTime': idGrafikTime
                }
                $.ajax({
                    type: 'POST',
                    url: url,
                    data: sendData,

                    beforeSend: function() {
                        spinner.removeClass('notDisplayed');
                        editButton.addClass('notDisplayed');
                        deleteButton.addClass('notDisplayed');
                    },
                    success: function(data) {
                        //alert(data);
                        ITDoorsAjax.unblockUI($(parent));
                        data = JSON.parse(data);
                        if (data.success == 0) {
                            if (data.error == 'no_entity_found') {
                                spinner.addClass('notDisplayed');
                                editButton.removeClass('notDisplayed');
                                deleteButton.removeClass('notDisplayed');
                                alert('Oops, error happened');
                            }
                        }
                        else {
                            parent.remove();
                        }
                    }
                })

            } else {
                return false;
            }
            //ajax here
        })

        // set effect from select menu value
        $( "#add_button" ).click(function() {
            var options = {};
            $( "#add_div" ).toggle( 'blind', options, 500 );
            return false;
        });

        $('#addButton').die('click');
        $('#addButton').live('click', function(e){
            $('#non_official_error').hide( 'blind', {}, 500 );
            var timeFrom = $('#newFromTime').val();
            var timeTo = $('#newToTime').val();
            var officially = $('#officially').prop("checked");

            var url = $(this).data('url');
            var idCoworker = $(this).data('id_coworker');
            var idDepartment = $(this).data('id_department');
            var date = $(this).data('date');
            var sendData ={
                'idCoworker': idCoworker,
                'idDepartment': idDepartment,
                'date': date,
                'officially': officially,
                'fromTime': timeFrom,
                'toTime' : timeTo
            }

            $.ajax({
                type: 'POST',
                url: url,
                data: sendData,

                beforeSend: function() {
                    ITDoorsAjax.blockUI($('#add_div'));
                },
                success: function(data) {
                    //alert(data);
                    ITDoorsAjax.unblockUI($('#add_div'));
                    data = JSON.parse(data);
                    if (data.success == 0) {
                        if (data.error == 'no_official_permitted') {
                            $('#non_official_error').toggle( 'blind', {}, 500 );
                        }
                    }
                    else {
                        //alert(data.html)
                        var tempHtml = $('#tbody_content').html();
                        $('#tbody_content').html(data.html+tempHtml);
                        $('.timepiker-cool').timepicker({
                            autoclose: true,
                            minuteStep: 5,
                            showSeconds: false,
                            showMeridian: false
                        });
                        $( "#add_div" ).hide( 'blind', {}, 500 );

                    }
                }
            })

        })
    })

</script>


<div>
    <a class="btn purple" id="add_button">{% trans %}Add{% endtrans %}</a>
<li class="btn-group" style="float: right; ">
    <a class="btn green" style="margin-right: 10px;">Скопировать график</a>
    <button type="button" class="btn blue dropdown-toggle " data-toggle="dropdown" data-hover="dropdown" data-delay="1000" data-close-others="true">
							<span>
								{% trans %}Actions{% endtrans %}
							</span>
        <i class="fa fa-angle-down"></i>
    </button>
    <ul class="dropdown-menu pull-right" role="menu">
        <li>
            <a href="#">
                {% trans %}Illness vacation{% endtrans %}
            </a>
        </li>
        <li>
            <a href="#">
                {% trans %}Hooky{% endtrans %}
            </a>
        </li>
        <li>
            <a href="#">
                {% trans %}Fired{% endtrans %}
            </a>
        </li>
        <li>
            <a href="#">
                {% trans %}Vacation{% endtrans %}
            </a>
        </li>
        <li class="divider">
        </li>
        <li>
            <a href="#">
                {% trans %}Clear{% endtrans %}
            </a>
        </li>
    </ul>
</li>
</div>
<div style="height: 150px; width: 100%; margin-top: 10px; display: none;" id="add_div">
    <div class="alert alert-warning notDisplayed" id="non_official_error">
        <strong>{% trans %}Error{% endtrans %}</strong> {% trans %}Non-official person cant  work officially{% endtrans %}
    </div>


    <b>{% trans %}Range{% endtrans %}:</b>
    {% trans %}From{% endtrans %}
        <input size="5" id="newFromTime" value="0000" type="text">
    {% trans %}To{% endtrans %}
        <input size="5" id="newToTime" value="0000" type="text">
    <br>
    <b>{% trans %}Officially{% endtrans %}:</b> <input type="checkbox" id="officially">

    <br>
    <button id="addButton"
            data-id_coworker="{{ idCoworker }}"
            data-date="{{ date }}"
            data-id_department="{{ idDepartment }}"
            data-url="{{ path('it_doors_oper_schedule_add_new_time') }}">{% trans %}Add{% endtrans %}</button>


    {#
        <div id="test"> test</div>
    #}
</div>

<style>
    .action_button{
        cursor: pointer;
    }
    .action_button:hover{
        color: red;
    }
    .fa-check-circle-o:hover{
        color: green;
    }

    .td_not_officialy{
        color: red;
    }
    .notDisplayed{
        display: none;
    }
    .timeFrom, .timeTo{
        /*width: 25px;*/
    }
</style>
<br>
{{ day }}-{{ monthName|trans }}-{{ year }}
<table class="table table-striped table-hover table-bordered" style="margin-top: 10px;">
    <thead>
        <tr>
            <th colspan="2">{% trans %}Range{% endtrans %}</th>
            <th>{% trans %}Sum{% endtrans %}</th>
            <th>{% trans %}Day kind{% endtrans %}</th>
            <th>{% trans %}Evening kind{% endtrans %}</th>
            <th>{% trans %}Night kind{% endtrans %}</th>
            <th></th>
        </tr>
    </thead>
    <tbody id="tbody_content">
    {% if coworkerDayTime is defined%}
        {% for oneDayTime in coworkerDayTime %}

            {{ render(controller('ITDoorsOperBundle:OperSchedule:scheduleTableRow', {
            'oneDayTime': oneDayTime
            })) }}

        {% endfor %}

    {% endif %}

    </tbody>
    <tfoot>
        <tr>
            <th colspan="2">{% trans %}Range{% endtrans %}</th>
            <th>{% trans %}Sum{% endtrans %}</th>
            <th>{% trans %}Day kind{% endtrans %}</th>
            <th>{% trans %}Evening kind{% endtrans %}</th>
            <th>{% trans %}Night kind{% endtrans %}</th>
            <th></th>
        </tr>
    </tfoot>
</table>