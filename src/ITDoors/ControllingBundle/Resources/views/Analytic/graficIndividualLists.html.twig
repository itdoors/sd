{% trans_default_domain 'ITDoorsControllingBundle' %}
<script>

    function daysInMonth(month,year) {
        var dd = new Date(year, month, 0);
        return dd.getDate();
    }
    function number_format(number, decimals, dec_point, thousands_sep) {
            number = (number + '')
              .replace(/[^0-9+\-Ee.]/g, '');
            var n = !isFinite(+number) ? 0 : +number,
              prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
              sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
              dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
              s = '',
              toFixedFix = function(n, prec) {
                var k = Math.pow(10, prec);
                return '' + (Math.round(n * k) / k)
                  .toFixed(prec);
              };
            // Fix for IE parseFloat(0.55).toFixed(0) = 0;
            s = (prec ? toFixedFix(n, prec) : '' + Math.round(n))
              .split('.');
            if (s[0].length > 3) {
              s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
            }
            if ((s[1] || '')
              .length < prec) {
              s[1] = s[1] || '';
              s[1] += new Array(prec - s[1].length + 1)
                .join('0');
            }
            return s.join(dec);
    }
    function showTooltip(x, y, contents) {
        $('<div id="tooltip">' + contents + '</div>').css({
                position: 'absolute',
                display: 'none',
                top: y + 5,
                left: x -50 ,
                border: '1px solid #333',
                padding: '4px',
                color: '#fff',
                'border-radius': '3px',
                'background-color': '#333',
                opacity: 0.80
            }).appendTo("body").fadeIn(200);
    }
        
    function chart(pageviews, visitors, id) {

        var plot = $.plot($("#chart_"+id), [
                {
                    data: visitors,
                    label: "Простроченый долг",
                    lines: {
                        lineWidth: 5
                    },
                    shadowSize: 0
                },
                {
                    data: pageviews,
                    label: "Общий долг",
                    lines: {
                        lineWidth: 5
                    },
                    shadowSize: 0

                }
            ], {
                series: {
                    lines: {
                        show: true,
                        lineWidth: 1,
                        fill: true,
                        fillColor: {
                            colors: [{
                                    opacity: 0.05
                                }, {
                                    opacity: 0.06
                                }
                            ]
                        }
                    },
                    points: {
                        show: true,
                        radius: 3,
                        lineWidth: 1
                    },
                    shadowSize: 1
                },
                grid: {
                    hoverable: true,
                    clickable: true,
                    tickColor: "#eee",
                    borderColor: "#eee",
                    borderWidth: 1
                },
                colors: ["#d84a38", "#615A5A", "#52e136"],
                xaxis: {
                    mode: "categories",
                    tickLength: 0,
                    //ticks: 10,
                    //tickDecimals: 0,
                    tickColor: "#eee",
                    alignTicksWithAxis: 10
                },
                yaxis: {
                    ticks: 10,
                    min: 0,
                    tickDecimals: 0,
                    tickColor: "#eee"
                },
                legend: {
                    show: true,
                    noColumns: 1, // number of colums in legend table
                    labelFormatter: null, // fn: string -> string
                    labelBoxBorderColor: "#ccc", // border color for the little label boxes
                    container: "#legendBlock"+id, // container (as jQuery object) to put legend in, null means default on top of graph
                    position: "left", // position of default legend container within plot
                    margin: 10, // distance from grid edge to default legend container within plot
                    backgroundColor: '#eee', // null means auto-detect
                    backgroundOpacity: 0.15, // set to 0 to avoid background
                    sorted: 'asc'    // default to no legend sorting
                }
                
            });
        var previousPoint = null;
        $("#chart_"+id).bind("plothover", function (event, pos, item) {
            $("#x").text(pos.x.toFixed(2));
            $("#y").text(pos.y.toFixed(2));
            if (item) {
                if (previousPoint !== item.dataIndex) {
                    previousPoint = item.dataIndex;

                    $("#tooltip").remove();
                    var x = item.series.data[item.datapoint[0]][0],
                        y = item.datapoint[1].toFixed(2);

                    showTooltip(item.pageX, item.pageY, item.series.label + " " + x + " - " + y);
                }
            } else {
                $("#tooltip").remove();
                previousPoint = null;
            }
        });
        
        for (visitor in visitors) {
             o = plot.pointOffset({ x:  visitor , y: visitors[visitor][1] });
            $("#chart_"+id).append(
                       '<div style="text-align:right;width:65px;position:absolute;left:' + 
                       (o.left - 66) + 
                       'px;top:' + (o.top-16)+ 
                       'px;color:#000;font-size:smaller">'+number_format(visitors[visitor][1], 2, ',', ' ')+'</div>'); 
        }
        for (pageview in pageviews) {
             o = plot.pointOffset({ x:  pageview , y: pageviews[pageview][1] });
            $("#chart_"+id).append(
                       '<div style="text-align:right;width:65px;position:absolute;left:' + 
                       (o.left - 66) + 
                       'px;top:' + (o.top-16)+ 
                       'px;color:#000;font-size:smaller">'+number_format(pageviews[pageview][1], 2, ',', ' ')+'</div>'); 
        }
    }
    var mountsShort = [];
        mountsShort['01'] = 'Янв.';
        mountsShort['02'] = 'Фев.';
        mountsShort['03'] = 'Мар.';
        mountsShort['04'] = 'Апр.';
        mountsShort['05'] = 'Май';
        mountsShort['06'] = 'Июн.';
        mountsShort['07'] = 'Июл.';
        mountsShort['08'] = 'Авг.';
        mountsShort['09'] = 'Сен.';
        mountsShort['10'] = 'Окт.';
        mountsShort['11'] = 'Ноя.';
        mountsShort['12'] = 'Дек.';
    var months = ['01','02','03','04','05','06','07','08','09','10','11','12'];
</script>

<div class="navigation">
    {{ ajax_paginator_render(
            entities, namespasePagin, {
                    'datatable_ajax_1': 'ITDoorsAjax.updateList'
                }
            )
    }}
</div>
    {% if entities | length %}
    {% for  key,item in entities %}
            {% set invoiceAs = invoices[item.id]['invoice'] %}
            {% set invoicePs = invoices[item.id]['invoicePays'] %}
            {% set years = invoices[item.id]['years'] %}

            <script>
                $(document).ready(function(){
                    var pageviews = [];
                    var visitors = [];
                    var years = JSON.parse('{{ invoices[item.id]['years'] | json_encode() | raw }}');
                    var yearA = JSON.parse('{{ invoices[item.id]['invoicesA'] | json_encode() | raw }}');
                    var yearP = JSON.parse('{{ invoices[item.id]['invoicesP'] | json_encode() | raw }}');
                    var yearPR = JSON.parse('{{ invoices[item.id]['invoicesPR'] | json_encode() | raw }}');
                    var sumA = 0;
                    var sumP = 0;
                    var sumPR = 0;
                    {% if showType %}
                        var year = '{{showType.year}}';
                        var month = '{{showType.month}}';
                       
                            var maxDay = daysInMonth(month,year);
                            for (i = 1; i <= maxDay; i++) {
                               if(yearA[year] !== undefined && yearA[year][month] !== undefined &&  yearA[year][month][i] !== undefined) {
                                   sumA += yearA[year][month][i];
                               }
                               if(yearP[year] !== undefined && yearP[year][month] !== undefined && yearP[year][month][i] !== undefined) {
                                   sumP = yearP[year][month][i];
                               }
                               if(yearPR[year] !== undefined && yearPR[year][month] !== undefined && yearPR[year][month][i] !== undefined) {
                                   sumPR += yearPR[year][month][i];
                               }
                                pageviews.push([i, sumA-sumP]);
                                visitors.push([i, sumPR-sumP]);
                            }
                    {% else %}
                        for (var year in years) {
                            for (var month in months) {
                                if(yearA[year] !== undefined && yearA[year][months[month]] !== undefined) {
                                    sumA += yearA[year][months[month]]['summaInMonth'];
                                }
                                if(yearP[year] !== undefined && yearP[year][months[month]] !== undefined) {
                                    sumP = yearP[year][months[month]];
                                }
                                if(yearPR[year] !== undefined && yearPR[year][months[month]] !== undefined) {
                                    sumPR += yearPR[year][months[month]]['summaInMonth'];
                                }
                                 pageviews.push([mountsShort[months[month]]+' '+year, sumA-sumP]);
                                 visitors.push([mountsShort[months[month]]+' '+year, sumPR-sumP]);
                            }
                        }
                    {% endif %}

                    chart(pageviews, visitors, {{ item.id }});
                });
            </script>
            <div id="legendBlock{{ item.id }}" style="float: right;"></div>
            <div class="portlet box red">
                <div class="portlet-title">
                        <div class="caption">
                                <i class="fa fa-gift"></i>
                                {{ item.customerName }}
                                
                        </div>
                </div>
                <div class="portlet-body">
                    <div id="chart_{{ item.id }}" class="chart" style="padding: 0px; position: relative;"></div>
                </div>
            </div>
    {% endfor %}  
    <div class="navigation">
        {{ ajax_paginator_render(
                entities, namespasePagin, {
                        'datatable_ajax_1': 'ITDoorsAjax.updateList'
                    }
                )
        }}
    </div>
{% endif %}