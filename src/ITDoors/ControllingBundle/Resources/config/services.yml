parameters:
    it_doors_controlling.repository.class: ITDoors\ControllingBundle\Entity\InvoiceMessageRepository
    it_doors_controlling.repository.entity: ITDoors\ControllingBundle\Entity\InvoiceMessage
    it_doors_invoice.service.class: ITDoors\ControllingBundle\Services\InvoiceService
    itdoors_controlling.message.form.class: ITDoors\ControllingBundle\Form\InvoiceMessageFormType
    itdoors_controlling.company.form.class: ITDoors\ControllingBundle\Form\InvoiceCompanystructureFormType
    some.extension: ITDoors\ControllingBundle\Twig\Extension\VarsExtension
    itdoors_controlling.invoice.filter.form.class: ITDoors\ControllingBundle\Form\InvoiceFilterFormType
    itdoors_controlling.invoice.filter.for.analytic.form.class: ITDoors\ControllingBundle\Form\InvoiceFilterForAnalyticFormType
    itdoors_controlling.service.class: ITDoors\ControllingBundle\Services\ControllingService
services:
    it_doors_controlling.repository:
        class: %it_doors_controlling.repository.class%
        factory_service: doctrine # this is an instance of Registry
        factory_method: getRepository
        arguments: [ %it_doors_controlling.repository.entity% ]
        
    some_id:
        class: %some.extension%
        arguments: [@service_container]
        tags:
            - { name: twig.extension, alias: some.extension }
        
    it_doors_invoice.service:
        class: %it_doors_invoice.service.class%
        arguments: [@service_container]
        
    itdoors_controlling.form.invoiceMessageForm:
        class: %itdoors_controlling.message.form.class%
        arguments: [@service_container]
        tags:
            - { name: form.type, alias: invoiceMessageForm }
            
    itdoors_controlling.form.invoiceCompanystructureForm:
        class: %itdoors_controlling.company.form.class%
        arguments: [@service_container]
        tags:
            - { name: form.type, alias: invoiceCompanystructureForm }        

    itdoors_controlling.form.invoiceFilterForm:
        class: %itdoors_controlling.invoice.filter.form.class%
        arguments: [@service_container]
        tags:
            - { name: form.type, alias: invoiceFilterForm }

    itdoors_controlling.form.invoiceFilterForAnalyticForm:
        class: %itdoors_controlling.invoice.filter.for.analytic.form.class%
        arguments: [@service_container]
        tags:
            - { name: form.type, alias: invoiceFilterForAnalyticForm }
            
    it_doors_controlling.service:
        class: %itdoors_controlling.service.class%
        arguments: [@service_container]