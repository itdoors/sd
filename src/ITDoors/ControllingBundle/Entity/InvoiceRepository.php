<?php

namespace ITDoors\ControllingBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * InvoiceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InvoiceRepository extends EntityRepository
{

    public function findAllOrderedByName()
    {
        return $this->getEntityManager()
                ->createQuery('SELECT i FROM ITDoorsControllingBundle:Invoice i ORDER BY i.date_end ASC')
                ->getResult();
    }

    /**
     * Returns results for interval future invoice
     *
     * @param mixed[] $params
     *
     * @return mixed[]
     */
    public function getInvoicePeriod($param1, $param2)
    {
//        
//    $this->createQueryBuilder('hm')
//        ->where('hm.handling_id = :handlingId')
//        ->setParameter(':handlingId', $handlingId)
//        ->getQuery()
//        ->getResult();
//        
        $query = "
            SELECT
                i
            FROM
                ITDoorsControllingBundle:Invoice i
            WHERE '" . date('Y-m-d') . "' -   i.date_end >= '$param1'";
        if ($param2 != 0)
            $query .= "AND  '" . date('Y-m-d') . "' -   i.date_end <= '$param2'";
        $query .=" AND ( i.court is NULL OR   i.court = '0' ) ORDER BY i.date_end DESC";

        return $this->getEntityManager()
                ->createQuery($query)
                ->getResult();
    }

    public function getInvoiceCourt()
    {
        $query = "
            SELECT
                i
            FROM
                ITDoorsControllingBundle:Invoice i
            WHERE i.court = '1' ORDER BY i.date_end DESC";

        return $this->getEntityManager()
                ->createQuery($query)
                ->getResult();
    }

}
