<?php

namespace ITDoors\ControllingBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * InvoicePaymentsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InvoicePaymentsRepository extends EntityRepository
{
    /**
     * @param integer $customerId
     * @param array   $filters
     *
     * @return mixed[]
     */
    public function getForCustomer($customerId, $filters)
    {
        $sql = $this->createQueryBuilder('ip')
            ->select('ip.date')
            ->addSelect('ip.summa as summaPay')
            ->addSelect('i.delayDate')
            ->innerJoin('ip.invoice', 'i')
            ->where('i.customerId = :customerId')
            ->andWhere('i.delayDate < ip.date')
            ->setParameter('customerId', $customerId);
        if (sizeof($filters)) {
            foreach ($filters as $key => $value) {
                if (!$value) {
                    continue;
                }
                switch ($key) {
                    case 'dateRange':
                        $dateArr = explode('-', $value);
                        $dateStart = new \DateTime(str_replace('.', '-', $dateArr[0]));
                        $dateStop = new \DateTime(str_replace('.', '-', $dateArr[1]));

                        $sql->andWhere('i.date BETWEEN :datestart AND :datestop')
                            ->setParameter(':datestart', $dateStart)
                            ->setParameter(':datestop', $dateStop);
                        break;
                }
            }
        }

        return $sql
                ->orderBy('ip.date')
                ->getQuery()
                ->getResult();
    }
}
